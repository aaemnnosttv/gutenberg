on:
  release:
    types: [published]

name: Upload Gutenberg plugin to WordPress.org plugin repo

jobs:
  update-changelog:
    name: Update Changelog
    runs-on: ubuntu-latest
    if: github.event.release.assets[0]
    env:
      VERSION: ${{ github.event.release.name }}
    steps:
      - name: Compute release branch name
        id: get_release_branch
        run: |
          IFS='.' read -r -a VERSION_ARRAY <<< "$VERSION"
          RELEASE_BRANCH="release/${VERSION_ARRAY[0]}.${VERSION_ARRAY[1]}"
          echo "::set-output name=release_branch::$(echo $RELEASE_BRANCH)"

      - name: Checkout code
        uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f # v2.3.4
        with:
          ref: ${{ steps.get_release_branch.outputs.release_branch }}

      - name: Update the Changelog to include the release notes
        run: |
          printf '== Changelog ==\n\n' > new_changelog.txt
          printf '= %s =\n\n' "$VERSION" >> new_changelog.txt
          echo "${{ github.event.release.body }}" >> new_changelog.txt
          printf '\n\n' >> new_changelog.txt
          CHANGELOG_REGEX="=\s[0-9]+\.[0-9]+\.[0-9]+(-rc\.[0-9]+)?\s="
          RC_REGEX="=\s${VERSION}(-rc\.[0-9]+)?\s="
          if [[ ${{ github.event.release.prerelease }} == 'true' ]]; then
            awk "/${CHANGELOG_REGEX}/,EOF" changelog.txt >> new_changelog.txt
          else
            awk "/${RC_REGEX}/ {next}; /${CHANGELOG_REGEX}/ {found = 1}; found" changelog.txt >> new_changelog.txt
          fi
          mv new_changelog.txt changelog.txt

      - name: Configure git user name and email
        run: |
          git config user.name "Gutenberg Repository Automation"
          git config user.email gutenberg@wordpress.org

      - name: Commit the Changelog update
        run: |
          git add changelog.txt
          git commit -m "Update Changelog for ${VERSION}"
          git push --set-upstream origin "${{ steps.get_release_branch.outputs.release_branch }}"

      - name: Upload Changelog artifact
        uses: actions/upload-artifact@e448a9b857ee2131e752b06002bf0e093c65e571 # v2.2.2
        with:
          name: changelog
          path: ./changelog.txt

      - name: Cherry-pick Changelog update to trunk
        run: |
          git fetch --depth=1 origin trunk
          git checkout trunk
          TRUNK_VERSION=$(jq --raw-output '.version' package.json)
          if [[ "$VERSION" == "$TRUNK_VERSION" ]]; then
            git cherry-pick "${{ steps.get_release_branch.outputs.release_branch }}"
            git push
          fi

  upload:
    name: Upload Gutenberg Plugin
    runs-on: ubuntu-latest
    environment: wp.org plugin
    needs: update-changelog
    if: ${{ !github.event.release.prerelease && github.event.release.assets[0] }}
    env:
      PLUGIN_REPO_URL: 'https://plugins.svn.wordpress.org/gutenberg'
      STABLE_TAG_REGEX: 'Stable tag: [0-9]\+\.[0-9]\+\.[0-9]\+\s*'
      SVN_USERNAME: ${{ secrets.svn_username }}
      SVN_PASSWORD: ${{ secrets.svn_password }}
      VERSION: ${{ github.event.release.name }}
    steps:
      - name: Check out Gutenberg trunk from WP.org plugin repo
        run: svn checkout "$PLUGIN_REPO_URL/trunk"

      - name: Get previous stable tag
        id: get_previous_stable_tag
        run: echo ::set-output name=stable_tag::$(grep "$STABLE_TAG_REGEX" ./trunk/readme.txt)

      - name: Delete everything
        working-directory: ./trunk
        run: find . -maxdepth 1 -not -name ".svn" -not -name "." -not -name ".." -exec rm -rf {} +

      - name: Download and unzip Gutenberg plugin asset into trunk folder
        env:
          PLUGIN_URL: ${{ github.event.release.assets[0].browser_download_url }}
        run: |
          curl -L -o gutenberg.zip $PLUGIN_URL
          unzip gutenberg.zip -d trunk
          rm gutenberg.zip

      - name: Replace the stable tag placeholder with the existing stable tag on the SVN repository
        env:
          STABLE_TAG_PLACEHOLDER: 'Stable tag: V\.V\.V'
          STABLE_TAG: ${{ steps.get_previous_stable_tag.outputs.stable_tag }}
        run: sed -i "s/${STABLE_TAG_PLACEHOLDER}/${STABLE_TAG}/g" ./trunk/readme.txt

      - name: Download Changelog Artifact
        uses: actions/download-artifact@4a7a711286f30c025902c28b541c10e147a9b843 # v2.0.8
        with:
          name: changelog
          path: trunk/changelog.txt

      - name: Commit the content changes
        working-directory: ./trunk
        run: |
          svn st | grep '^?' | awk '{print $2}' | xargs -r svn add
          svn st | grep '^!' | awk '{print $2}' | xargs -r svn rm
          svn commit -m "Committing version $VERSION" \
           --no-auth-cache --non-interactive  --username "$SVN_USERNAME" --password "$SVN_PASSWORD"

      - name: Create the SVN tag
        working-directory: ./trunk
        run: |
          svn copy "$PLUGIN_REPO_URL/trunk" "$PLUGIN_REPO_URL/tags/$VERSION" -m "Tagging version $VERSION" \
           --no-auth-cache --non-interactive  --username "$SVN_USERNAME" --password "$SVN_PASSWORD"

      - name: Update the plugin's stable version
        working-directory: ./trunk
        run: |
          sed -i "s/${STABLE_TAG_REGEX}/Stable tag: ${VERSION}/g" ./readme.txt
          svn commit -m "Releasing version $VERSION" \
           --no-auth-cache --non-interactive  --username "$SVN_USERNAME" --password "$SVN_PASSWORD"
